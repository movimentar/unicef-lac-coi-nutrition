---
title: "Results - Cost of Inaction"
author: "movimentar GmbH"
date: "`r format(Sys.time(), '%d %B %Y')`"
execute:
  echo: false  # Do not display code in the output
format:
  docx:
    toc: true
    toc-depth: 2
---

```{r}
#| label: setup
#| include: false
library(tidyverse)
library(targets)
library(gt)
tar_load(intervention_list) # used by custom function
```

This document compiles the core figures and tables supporting the final Cost of Inaction (CoI) study, structured by analytical component. It is intended to support reporting and review, not for direct publication.

# Result tables and figures

```{r}
#| label: custom-functions
#| include: false

# function arranges df by intervention name using factors from intervention_id
arrange_by_int_name <- function(df, intervention_list){
    df %>% 
    left_join(select(intervention_list, intervention_id, intervention_name),
              by = "intervention_name") %>% 
    arrange(intervention_id) %>% 
    select(-intervention_id) %>% 
    return()
}
```

## LiST model coverage inputs

These inputs represent the baseline and targeted intervention coverage values used in LiST simulations for each emergency scenario.

```{r list-input}
tar_read(list_input) %>% 
    # prepare data for gt package
    ungroup() %>% 
    # create gt object
    gt() %>% 
    tab_header(title = "Input coverages used in LiST") %>% 
    cols_hide(intervention_id) %>% 
    cols_label( # rename colums
      emergency = "Emergency",
      country = "Country",
      target_group = "Target group",
      intervention_name = "Intervention name",
      coverage = "Coverage (%)",
      list_name = "Intervention name in LiST"
    ) %>% 
    fmt_number( # format column
      columns = coverage,
      decimals = 2
    ) %>% 
  cols_align(align = "center", columns = everything())
```

## Coverage of interventions needed respective to nutrition needs

```{r intervention_coverage}
tar_read(coi_coverages) %>% 
  arrange_by_int_name(intervention_list) %>% 
  ungroup() %>% 
  gt() %>% 
  tab_header(
    title = "Coverage of interventions needed respective to nutrition needs"
  ) %>% 
  tab_spanner(
    label = "Eta-Iota",
    columns = contains("Eta-Iota")
  ) %>% 
  tab_spanner(
    label = "Migration flows",
    columns = contains("Migration")
  ) %>% 
  cols_label(
    intervention_name = "Intervention name",
    `total_beneficiaries_Eta-Iota` = "Interventions delivered",
    `ideal_delivered_Eta-Iota` = "Interventions needed",
    `coverage_Eta-Iota` = "Eta-Iota coverage (%)",
    `total_beneficiaries_Migration flows` = "Interventions delivered",
    `ideal_delivered_Migration flows` = "Interventions needed",
    `coverage_Migration flows` = "Migration coverage (%)",
  ) %>% 
  fmt_number(
    columns = everything(),
    decimals = 0
  ) %>% 
  fmt_number( # format column
      columns = contains("coverage"),
      decimals = 2
  ) %>% 
  cols_align("center")
```

## Principal Component Analysis results
```{r pca_results}
tar_load(coi_pca)

# display/format figures and tables
coi_pca$pca_biplot
coi_pca$var_contributions %>% 
  gt(rowname_col = "intervention_id") %>% 
  tab_header(title = "PCA variable contributions") %>% 
  fmt_number(columns = everything(),
             decimals = 4)
coi_pca$screeplot
coi_pca$clusters
coi_pca$dendogram
```

## Needs and assistance cost summary
```{r cost_summary}
tar_read(coi_costs) %>%
  ungroup() %>%
  select(
    target_group,
    emergency,
    total_beneficiaries,
    total_cost,
    ideal_delivered,
    ideal_cost,
    funding_gap,
    global_coverage
  ) %>%
  gt(rowname_col = "target_group", groupname_col = "emergency") %>%
  tab_header(
    title = "Needs and assistance cost summary"
  ) %>% 
  summary_rows(
    groups = everything(),
    columns = c(
      "total_beneficiaries",
      "ideal_delivered",
      "total_cost",
      "ideal_cost",
      "funding_gap",
      "global_coverage"
    ),
    fns = list(Total = ~ sum(.)),
    fmt = list( ~ fmt_number(., decimals = 0))
  ) %>%
  fmt_number(columns = everything(),
             decimals = 0) %>% 
  tab_spanner(
    label = "Implemented response",
    columns = c("total_beneficiaries", "total_cost")
  ) %>% 
  tab_spanner(
    label = "Ideal response",
    columns = c("ideal_delivered", "ideal_cost", "funding_gap")
  ) %>% 
  cols_align("center") %>% 
  cols_label(
    total_beneficiaries = "Interventions delivered",
    global_coverage = "Global coverage (%)",
    total_cost = "Costs (USD)",
    ideal_delivered = "Interventions needed",
    ideal_cost = "Costs (USD)",
    funding_gap = "Funding gap (USD)"
  )
  
  
```

## Direct benefits

```{r direct_benefits}
# malnutrition indicators
tar_read(coi_dir_benefits)$malnutrition %>%
  ungroup() %>%
  filter(!(
    indicator_name_absolute %in% c("Maternal mortality", "Neonatal mortality")
  )) %>%
  gt(groupname_col = "emergency") %>%
  tab_header(title = "Estimated direct benefits in malnutrition and mortality cases prevented by nutrition response scenario per emergency using the LiST model (2020-2022)") %>%
  cols_hide("indicator_category") %>%
  fmt_number(columns = everything(),
             decimals = 0) %>%
  cols_align("center") %>%
  cols_label(
    indicator_name_absolute = "Indicator name",
    coverage_0 = "Cases in no response scenario (0% coverage)",
    saved_implemented = "Cases prevented by UNICEF response",
    saved_30 = "Cases prevented by 30% coverage",
    saved_95 = "Cases prevented by 95% coverage"
  )

# breastfeeding indicators
tar_read(coi_dir_benefits)$breastfeeding %>%
  ungroup() %>%
  filter(indicator_category == "breastfeeding") %>%
  # changing improvement sign to match the improvement logic
  mutate(
    saved_implemented = abs(saved_implemented),
    saved_30 = abs(saved_30),
    saved_95 = abs(saved_95)
  ) %>% 
  gt(groupname_col = "emergency") %>%
  tab_header(title = "Estimated direct benefits in breastfeeding indicators by nutrition response scenario per emergency using the LiST model (2020-2022)") %>%
  cols_hide("indicator_category") %>%
  fmt_number(columns = everything(),
             decimals = 0) %>%
  cols_align("center") %>%
  cols_label(
    indicator_name_absolute = "Indicator name",
    coverage_0 = "Improvements in no response scenario (0% coverage)",
    saved_implemented = "Improvements by UNICEF response",
    saved_30 = "Improvements by 30% coverage",
    saved_95 = "Improvements by 95% coverage"
  )
```

## Indirect benefits

```{r indirect benefits}
tar_load(c("mean_formula_price", "formula_packages"))

tar_read(coi_indir_benefits) %>% 
  ungroup() %>% 
  mutate(
    `Eta-Iota_implemented` = abs(`Eta-Iota_implemented`),
    `Eta-Iota_30` = abs(`Eta-Iota_30`),
    `Eta-Iota_95` = abs(`Eta-Iota_95`),
    `Migration flows_implemented` = abs(`Migration flows_implemented`),
    `Migration flows_30` = abs(`Migration flows_30`),
    `Migration flows_95` = abs(`Migration flows_95`)
  ) %>% 
  gt(rowname_col = "indicator_name_absolute") %>% 
  tab_header(title = "
Estimated indirect benefits by nutrition response scenario per emergency from exclusive breastfeeding improvements") %>% 
  cols_hide(indicator_name) %>% 
  fmt_number(columns = everything(),
             decimal = 0) %>% 
  cols_align("center") %>% 
  tab_spanner(
    label = "Eta-Iota",
    columns = contains("Eta")
  ) %>% 
  tab_spanner(
    label = "Migration flows",
    columns = contains("Migration")
  ) %>% 
  grand_summary_rows(
    columns = c("Eta-Iota_implemented",
                "Eta-Iota_30",
                "Eta-Iota_95",
                "Migration flows_implemented",
                "Migration flows_30",
                "Migration flows_95"),
    fns = list(Total = ~sum(.)),
    fmt = ~fmt_number(., decimals = 0)
  ) %>% 
  cols_label(
    `Eta-Iota_implemented` = "USD saved by UNICEF response",
    `Eta-Iota_30` = "USD saved by 30% coverage",
    `Eta-Iota_95` = "USD saved by 95% coverage",
    `Migration flows_implemented` = "USD saved by UNICEF response",
    `Migration flows_30` = "USD saved by 30% coverage",
    `Migration flows_95` = "USD saved by 95% coverage"
  ) %>% 
  tab_footnote(
    footnote = "Costs calculated for years between 2038 - 2080",
    locations = cells_stub( rows = 1)
  ) %>% 
    tab_footnote(
    footnote = paste0("Based on the estimation that two years of baby formula would cost ",
                      format(mean_formula_price * formula_packages, digits = 1, big.mark = ","),
                      " USD"),
    locations = cells_stub(rows = 2)
  )

```

# Support tables 

```{r}
#| label: list-inputs

tar_read(list_input) %>% 
  ungroup() %>% 
  gt() %>% 
  tab_header(title = "Input coverages used in LiST models") %>% 
  cols_hide(intervention_id) %>% 
  cols_label()
```


```{r}
#| label: baby formula prices

tar_read(formula_price) %>% 
  filter(Country %in% c(
      "Guatemala",
      "Honduras",
      "Nicaragua",
      "Colombia",
      "Peru"
    )) %>%
  mutate(`Unit cost for price of lowest economy brand of formula per 900-gram container (US$)` = if_else(
    `Unit cost for price of lowest economy brand of formula per 900-gram container (US$)`== "Not Available",
    NA,
    as.double(`Unit cost for price of lowest economy brand of formula per 900-gram container (US$)`)
  )) %>% 
  gt(rowname_col = "Country") %>% 
  tab_header(title = "Price data of baby formula containers in countries of study from the 'Cost of Not Breastfeeding Tool'") %>% 
  grand_summary_rows(columns = `Unit cost for price of lowest economy brand of formula per 900-gram container (US$)`,
                     fns = list(Mean = ~mean(., na.rm = TRUE)))
```


```{r}
#| label: median-costs

tar_read(median_costs_cleaned) %>%
  left_join(select(intervention_list, intervention_id, intervention_name),
            by = "intervention_id") %>% 
  relocate(intervention_name, .after = emergency) %>% 
  pivot_wider(names_from = emergency, 
              values_from = median_cost_person) %>% 
  select(-intervention_id) %>% 
  arrange_by_int_name(intervention_list) %>% 
  gt(rowname_col = "intervention_name") %>% 
  tab_header(title = "Cleaned median intervention delivery costs (USD) per person used in estimations") %>% 
  fmt_number(columns = everything(),
             decimals = 2) %>% 
  tab_spanner(
    label = "USD costs",
    columns = c("Eta-Iota", "Migration flows")
  )
  
```


```{r}
#| label: baby-formula-packages

data.frame(
  Period_Weeks = c("1-2", "3-4", "5-8", "9-16", "17-20 (5 months)", "21-24 (6+ months)"),
  Formula_Grams_per_Bottle = c(8.8, 13.2, 17.6, 22, 26.4, 26.4),
  Bottles_per_Day = c(7, 5, 5, 5, 4, 2),
  Feeding_Duration_Weeks = c(2, 2, 4, 8, 4, 72)
) %>% 
  gt() %>% 
  tab_header(title = "Baby Formula Feeding Schedule as per manufacturer's instructions used in estimations") %>% 
  tab_source_note(source_note = "Source: Löwezahn organics, https://bit.ly/42bNli8")


```

